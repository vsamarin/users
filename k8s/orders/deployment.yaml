apiVersion: apps/v1
kind: Deployment
metadata:
  name: orders
  namespace: homework
spec:
  replicas: 1
  selector:
    matchLabels:
      app: orders
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app: orders
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        prometheus.io/path: "/actuator/prometheus"
    spec:
      containers:
        - name: orders
          image: vsamarin/orders:1.0.0
          imagePullPolicy: Always
          ports:
            - name: web
              containerPort: 8000
          env:
            - name: DB_URL
              valueFrom:
                configMapKeyRef:
                  name: orders-config
                  key: db.url
            - name: DB_USER
              valueFrom:
                configMapKeyRef:
                  name: orders-config
                  key: db.user
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: orders-secret
                  key: db.password
            - name: CONTEXT_PATH
              value: /orders
            - name: DB_SCHEMA
              value: orders
            - name: RABBITMQ_HOST
              value: rabbitmq
            - name: RABBITMQ_PORT
              value: "5672"
            - name: RABBITMQ_USERNAME
              value: my-user
            - name: RABBITMQ_PASSWORD
              value: my-password
            - name: RABBITMQ_TEMPLATE_REPLY_TIMEOUT
              value: "10000"
